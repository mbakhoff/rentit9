// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package esi.rentit9.web.users;

import esi.rentit9.domain.BuildIt;
import esi.rentit9.domain.OrderStatus;
import esi.rentit9.domain.Plant;
import esi.rentit9.domain.PurchaseOrder;
import esi.rentit9.web.users.POUController;
import java.io.UnsupportedEncodingException;
import java.util.Arrays;
import javax.servlet.http.HttpServletRequest;
import org.joda.time.format.DateTimeFormat;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.util.UriUtils;
import org.springframework.web.util.WebUtils;

privileged aspect POUController_Roo_Controller {
    
    @RequestMapping(value = "/{id}", produces = "text/html")
    public String POUController.show(@PathVariable("id") Long id, Model uiModel) {
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("purchaseorder", PurchaseOrder.findPurchaseOrder(id));
        uiModel.addAttribute("itemId", id);
        return "users/po/show";
    }
    
    @RequestMapping(produces = "text/html")
    public String POUController.list(@RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        if (page != null || size != null) {
            int sizeNo = size == null ? 10 : size.intValue();
            final int firstResult = page == null ? 0 : (page.intValue() - 1) * sizeNo;
            uiModel.addAttribute("purchaseorders", PurchaseOrder.findPurchaseOrderEntries(firstResult, sizeNo));
            float nrOfPages = (float) PurchaseOrder.countPurchaseOrders() / sizeNo;
            uiModel.addAttribute("maxPages", (int) ((nrOfPages > (int) nrOfPages || nrOfPages == 0.0) ? nrOfPages + 1 : nrOfPages));
        } else {
            uiModel.addAttribute("purchaseorders", PurchaseOrder.findAllPurchaseOrders());
        }
        addDateTimeFormatPatterns(uiModel);
        return "users/po/list";
    }
    
    @RequestMapping(value = "/{id}", params = "form", produces = "text/html")
    public String POUController.updateForm(@PathVariable("id") Long id, Model uiModel) {
        populateEditForm(uiModel, PurchaseOrder.findPurchaseOrder(id));
        return "users/po/update";
    }
    
    void POUController.addDateTimeFormatPatterns(Model uiModel) {
        uiModel.addAttribute("purchaseOrder_startdate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
        uiModel.addAttribute("purchaseOrder_enddate_date_format", DateTimeFormat.patternForStyle("M-", LocaleContextHolder.getLocale()));
    }
    
    void POUController.populateEditForm(Model uiModel, PurchaseOrder purchaseOrder) {
        uiModel.addAttribute("purchaseOrder", purchaseOrder);
        addDateTimeFormatPatterns(uiModel);
        uiModel.addAttribute("buildits", BuildIt.findAllBuildIts());
        uiModel.addAttribute("orderstatuses", Arrays.asList(OrderStatus.values()));
        uiModel.addAttribute("plants", Plant.findAllPlants());
    }
    
    String POUController.encodeUrlPathSegment(String pathSegment, HttpServletRequest httpServletRequest) {
        String enc = httpServletRequest.getCharacterEncoding();
        if (enc == null) {
            enc = WebUtils.DEFAULT_CHARACTER_ENCODING;
        }
        try {
            pathSegment = UriUtils.encodePathSegment(pathSegment, enc);
        } catch (UnsupportedEncodingException uee) {}
        return pathSegment;
    }
    
}
